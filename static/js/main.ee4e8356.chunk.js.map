{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Button/Button.js","components/Loader/Loader.js","components/API/api.js","components/App/App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","SearchBar","state","searchQuery","handleChange","event","currentTarget","name","value","setState","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","this","className","s","Searchbar","SearchForm","type","SearchFormButton","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","modalContent","id","onItemClick","console","log","webformatURL","src","alt","ImageGalleryItemImage","onClick","ImageGallery","handleOpenModal","e","target","images","map","image","Modal","handleKeyDown","code","onBackdrop","handleBackdropClick","window","addEventListener","removeEventListener","content","Overlay","Button","onPress","Spinner","color","height","width","fetchImages","page","fetchUrl","fetch","then","res","json","App","visibleImages","isLoading","openModal","toggleModal","toggleLoading","handleChangeQuery","query","handleNextPage","handleScroll","scrollTo","top","document","documentElement","scrollHeight","behavior","modalContentSet","itemId","element","find","largeImageURL","getData","hits","catch","message","finally","prevProps","isNotLastPage","length","btnEnable","autoClose","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ee4e8356.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2Xv1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__sZ2tb\",\"Modal\":\"Modal_Modal__1gMrb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3THpx\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__BfzPY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1weoQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loader_Spinner__36IMe\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './Searchbar.module.css';\n\nclass SearchBar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    searchQuery: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.searchQuery.trim() === '') {\n      toast.error('Enter your query!');\n      return;\n    }\n\n    const { searchQuery } = this.state;\n    this.props.onSubmit(searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <ImSearch />\n          </button>\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"searchQuery\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n            value={searchQuery}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ImageGalleryItem.module.css\";\n\nclass ImageGalleryItem extends Component {\n  static propTypes = {\n    onItemClick: PropTypes.func.isRequired,\n    id: PropTypes.number.isRequired,\n    webformatURL: PropTypes.string.isRequired,\n  };\n\n  modalContent = (id) => {\n    this.props.onItemClick(id);\n    console.log(id);\n  };\n  render() {\n    const { id, webformatURL } = this.props;\n    return (\n      <img\n        src={webformatURL}\n        alt=\"\"\n        className={s.ImageGalleryItemImage}\n        onClick={() => this.modalContent(id)}\n      />\n    );\n  }\n}\n\nexport default ImageGalleryItem;\n","import PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\nimport React, { Component } from \"react\";\nimport s from \"./ImageGallery.module.css\";\n\nclass ImageGallery extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    onItemClick: PropTypes.func.isRequired,\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n      })\n    ).isRequired,\n  };\n\n  handleOpenModal = (e) => {\n    if (e.target !== e.currentTarget) {\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    const { images, onItemClick } = this.props;\n    return (\n      <ul className={s.ImageGallery} onClick={this.handleOpenModal}>\n        {images &&\n          images.map((image) => (\n            <li key={image.id} className={s.ImageGalleryItem}>\n              <ImageGalleryItem {...image} onItemClick={onItemClick} />\n            </li>\n          ))}\n      </ul>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nclass Modal extends Component {\n  static propTypes = {\n    onBackdrop: PropTypes.func.isRequired,\n    content: PropTypes.string.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onBackdrop();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      this.props.onBackdrop();\n    }\n  };\n\n  render() {\n    const { content } = this.props;\n    console.log(content);\n    return (\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={content} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onPress }) => {\n  return (\n    <button type=\"button\" onClick={onPress} className={s.Button}>\n      Load more\n    </button>\n  );\n};\nButton.propTypes = {\n  onPress: PropTypes.func.isRequired,\n};\nexport default Button;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nimport s from \"./Loader.module.css\";\n\nconst Spinner = () => {\n  return (\n    <div className={s.Spinner}>\n      <Loader type=\"Puff\" color=\"#00BFFF\" height={200} width={200} />\n    </div>\n  );\n};\n\nexport default Spinner;\n","const API_KEY = '21886555-3fceaf8550bdc90a73320eabf';\nconst BASE_URL = 'https://pixabay.com/api/?';\n\nconst fetchImages = (searchQuery, page) => {\n  const fetchUrl = `${BASE_URL}q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(fetchUrl).then(res => res.json());\n};\n\nexport default fetchImages;\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport SearchBar from '../Searchbar/Searchbar';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport Modal from '../Modal/Modal';\nimport Button from '../Button/Button';\nimport Loader from '../Loader/Loader';\nimport fetchImages from '../API/api';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    modalContent: '',\n    searchQuery: '',\n    page: 1,\n    visibleImages: [],\n    isLoading: false,\n    openModal: false,\n  };\n\n  componentDidUpdate(prevProps, { searchQuery, page }) {\n    if (searchQuery !== this.state.searchQuery || page !== this.state.page) {\n      this.getData();\n    }\n    this.handleScroll();\n  }\n\n  toggleModal = () => {\n    this.setState(({ openModal }) => ({ openModal: !openModal }));\n  };\n\n  toggleLoading = () => {\n    this.setState(({ isLoading }) => ({ isLoading: !isLoading }));\n  };\n\n  handleChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      visibleImages: [],\n    });\n  };\n\n  handleNextPage = () => {\n    this.setState(({ page }) => {\n      return {\n        page: page + 1,\n      };\n    });\n  };\n\n  handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  modalContentSet = itemId => {\n    const { visibleImages } = this.state;\n    const element = visibleImages.find(({ id }) => id === itemId);\n    this.setState({ modalContent: element.largeImageURL });\n  };\n\n  getData = () => {\n    const { searchQuery, page } = this.state;\n    this.toggleLoading();\n    fetchImages(searchQuery, page)\n      .then(({ hits }) => {\n        this.setState(({ visibleImages }) => {\n          return { visibleImages: [...visibleImages, ...hits] };\n        });\n      })\n      .catch(error => console.log(error.message))\n      .finally(this.toggleLoading);\n  };\n\n  render() {\n    const { visibleImages, openModal, modalContent, isLoading, page } =\n      this.state;\n    const isNotLastPage = visibleImages.length / page === 12;\n    const btnEnable = visibleImages.length > 0 && !isLoading && isNotLastPage;\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={this.handleChangeQuery} />\n        {visibleImages.length === 0 ? (\n          <h2>Enter your request</h2>\n        ) : (\n          <>\n            <ImageGallery\n              images={visibleImages}\n              onClick={this.toggleModal}\n              onItemClick={this.modalContentSet}\n            />\n            <ToastContainer autoClose={3000} />\n\n            {openModal && (\n              <Modal content={modalContent} onBackdrop={this.toggleModal} />\n            )}\n            {isLoading && <Loader />}\n\n            {btnEnable && (\n              <Button name=\"Load more\" onPress={this.handleNextPage} />\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1qG9O\",\"SearchForm\":\"Searchbar_SearchForm__3AlMX\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2hWVI\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2Zjwo\",\"SearchFormInput\":\"Searchbar_SearchFormInput__t7Ml_\"};"],"sourceRoot":""}